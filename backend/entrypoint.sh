#!/bin/sh
set -e

# â”€â”€ wait until Elasticsearch answers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
until curl -s -o /dev/null "$ES_HOST"; do
  echo "ðŸ’¤  waiting for Elasticsearch at $ES_HOST â€¦"
  sleep 2
done
echo "ðŸš€ Elasticsearch is up"

# â”€â”€ Django housekeeping â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
python manage.py migrate --noinput

# â”€â”€ (re-)create the search index and stream-import the JSONL file â”€
python manage.py bulk_index \
        --file /code/data/ssoar_docs.jsonl \
        --index ssoar_demo \
        --recreate

# â”€â”€ run the web server â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
exec gunicorn backend.wsgi:application --bind 0.0.0.0:8000